# Author: Alberto Marziali
# Email: alberto.marziali.am@gmail.com  
# Last Update: 07/04/2021
# Version 0.3
# Description: Take in awsinspector reports from vulnWhisperer and pumps into logstash


input {
  file {
    path => "/opt/scanaggregator/scan/awsinspector/*.csv"
    mode => "read"
    start_position => "beginning"
    file_completed_action => "delete"
    sincedb_path => "/dev/null"
    tags => "awsinspector"
  }
}

filter {
  if "awsinspector" in [tags] {
    # Drop the header column
    if [message] =~ "^Agent ID" { drop {} }

    csv {
      columns => ["agent_id", "cis_benchmark", "cis_control", "cis_level", "cis_severity", "cve", "cvss2_score", "cvss2_severity", "cvss3_score", "description", "last_seen", "package_name", "public_ip", "recommendation", "rules_package_arn", "rules_package_name", "scan_arn", "scan_name", "tag", "title"]
      separator => ","
      source => "message"
    }

    date {
      match => [ "last_seen", "UNIX" ]
      target => "last_seen"
    }

    ruby {
      code => "if event.get('description')
                  event.set('description', event.get('description').gsub(92.chr + 'n', 10.chr).gsub(92.chr + 'r', 13.chr))
              end
                if event.get('recommendation')
                  event.set('recommendation', event.get('recommendation').gsub(92.chr + 'n', 10.chr).gsub(92.chr + 'r', 13.chr))
              end
                if event.get('title')
                  event.set('title', event.get('title').gsub(92.chr + 'n', 10.chr).gsub(92.chr + 'r', 13.chr))
              end"
    }

    # Here we drop non existent fields
    if ![cis_benchmark] or [cis_benchmark] == "nan" {
      mutate { remove_field => [ "cis_benchmark" ] }
    }
    if ![cis_control] or [cis_control] == "nan" {
      mutate { remove_field => [ "cis_control" ] }
    }
    if ![cis_level] or [cis_level] == "nan" {
      mutate { remove_field => [ "cis_level" ] }
    }
    if ![cis_severity] or [cis_severity] == "nan" {
      mutate { remove_field => [ "cis_severity" ] }
    }
    if ![cve] or [cve] == "nan" {
      mutate { remove_field => [ "cve" ] }
    }
    if ![cvss2_score] or [cvss2_score] == "nan" {
      mutate { remove_field => [ "cvss2_score" ] }
    }
    if ![cvss2_severity] or [cvss2_severity] == "nan" {
      mutate { remove_field => [ "cvss2_severity" ] }
    }
    if ![cvss3_score] or [cvss3_score] == "nan" {
      mutate { remove_field => [ "cvss3_score" ] }
    }
    if ![description] or [description] == "nan" {
      mutate { remove_field => [ "description" ] }
    }
    if ![last_seen] or [last_seen] == "nan" {
      mutate { remove_field => [ "last_seen" ] }
    }
    if ![package_name] or [package_name] == "nan" {
      mutate { remove_field => [ "package_name" ] }
    }
    if ![public_ip] or [public_ip] == "nan" {
      mutate { remove_field => [ "public_ip" ] }
    }
    if ![recommendation] or [recommendation] == "nan" {
      mutate { remove_field => [ "recommendation" ] }
    }
    if ![rules_package_arn] or [rules_package_arn] == "nan" {
      mutate { remove_field => [ "rules_package_arn" ] }
    }
    if ![rules_package_name] or [rules_package_name] == "nan" {
      mutate { remove_field => [ "rules_package_name" ] }
    }
    if ![scan_arn] or [scan_arn] == "nan" {
      mutate { remove_field => [ "scan_arn" ] }
    }
    if ![scan_name] or [scan_name] == "nan" {
      mutate { remove_field => [ "scan_name" ] }
    }
    if ![tag] or [tag] == "nan" {
      mutate { remove_field => [ "tag" ] }
    }

    mutate {
      remove_field => [ "message" ]
    }

    # Here we check the scan type
    if [cve] {
      mutate {
        add_field => { "scan_type" => "cve" }
      }
    }
    else if [cis_benchmark] {
      mutate {
        add_field => { "scan_type" => "cis" }
      }
    }
    else {
      mutate {
        add_field => { "scan_type" => "other" }
      }
    }

    # Here we apply scan type specific changes
    if "cve" in [scan_type] {
      # we rename the fields for an improved aggregation
      mutate {rename => {
          "agent_id" => "asset"
          "cve" => "cve"
          "cvss2_score" => "cvss2_score"
          "cvss2_severity" => "risk"
          "cvss3_score" => "cvss3_score"
          "description" => "description"
          "last_seen" => "last_seen"
          "package_name" => "package_name"
          "public_ip" => "ip"
          "recommendation" => "solution"
          "title" => "title"
        }
      }
      mutate {convert => ["cvss2_score", "float"]}
      mutate {convert => ["cvss3_score", "float"]}
    }

    # Here we create the fingerprint
    if "cve" in [scan_type] {
      fingerprint {
        source => ["asset", "cve"]
        concatenate_sources => true
      }
    }
    else {
      fingerprint {
        source => ["agent_id", "title"]
        concatenate_sources => true
      }
    }

  }

}

output {
  if "awsinspector" in [tags]{
    stdout {
      codec => dots
    }
    elasticsearch {
      hosts => ["https://localhost:9200"]
      user => admin
      password => admin
      manage_template => false
      ssl_certificate_verification => false
      index => "logstash-%{scan_type}-awsinspector"
      action => "update"
      doc_as_upsert => true
      document_id => "%{fingerprint}"
		}
  }
}
